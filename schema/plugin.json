{
  "jupyter.lab.setting-icon-class": "jp-GitIcon",
  "jupyter.lab.setting-icon-label": "Git",
  "title": "Git",
  "description": "jupyterlab-git settings.",
  "type": "object",
  "properties": {
    "blockWhileCommandExecutes": {
      "type": "boolean",
      "title": "Suspend user interaction until commands finish",
      "description": "Suspend JupyterLab user interaction until Git commands (e.g., commit, pull, reset, revert) finish executing. Setting this to true helps mitigate potential race conditions leading to data loss, conflicts, and a broken Git history. Unless running a slow network, UI suspension should not interfere with standard workflows. Setting this to false allows for actions to trigger multiple concurrent Git actions.",
      "default": true
    },
    "cancelPullMergeConflict": {
      "type": "boolean",
      "title": "Cancel pull merge conflict",
      "description": "If true, when fetching and integrating changes from a remote repository, a conflicting merge is canceled and the working tree left untouched.",
      "default": false
    },
    "disableBranchWithChanges": {
      "type": "boolean",
      "title": "Disable branch with changes",
      "description": "Disable all branch operations (new, switch) when there are changed/staged files",
      "default": false
    },
    "historyCount": {
      "type": "integer",
      "title": "History count",
      "description": "Number of (most recent) commits shown in the history log",
      "default": 25
    },
    "refreshInterval": {
      "type": "integer",
      "title": "Refresh interval",
      "description": "Number of milliseconds between polling the file system for changes.",
      "default": 3000
    },
    "simpleStaging": {
      "type": "boolean",
      "title": "Simple staging flag",
      "description": "If true, use a simplified concept of staging. Only files with changes are shown (instead of showing staged/changed/untracked), and all files with changes will be automatically staged",
      "default": false
    }
  }
}
